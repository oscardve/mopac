% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/differential.R
\name{analyze.differential}
\alias{analyze.differential}
\title{Gene differential essentiality scoring.}
\usage{
analyze.differential(id = NULL, sgRNA = NULL, scored_reps = NULL,
  annotation = NULL, condition1 = NULL, condition2 = NULL,
  read.unenriched = FALSE, unenriched = NULL, report = FALSE)
}
\arguments{
\item{id}{an optional identifier for the analysis. All input will be read from and all output will be stored in a directory with this name. If \code{NULL}, two data frames must be supplied containing the counts and annotation. Defaults to \code{NULL}.}

\item{sgRNA}{an optional data frame containing the sgRNA-level log-fold-changes for the replicate-averaged conditions. If \code{NULL}, the file 'sgRNA_lfc.txt' generated previously will be read.}

\item{scored_reps}{an optional data frame containing the gene-level scores for each replicate. If \code{NULL}, the file 'scored_reps.txt' generated previously will be read.}

\item{annotation}{an optional data frame containing the sample annotation information. If \code{NULL}, the annotation file generated previously will be read.}

\item{condition1}{name of first condition (i.e. any of the column names in the scored.txt file). Defaults to the first condition.}

\item{condition2}{name of second condition (i.e. any of the column names in the scored.txt file). Defaults to the second condition.}

\item{read.unenriched}{logical. Should the filtered list of unenriched genes generated by the 2-tail RRA algorithm be used to perform the normalization? Requires an identifier to be set, otherwise please use \code{unenriched} instead. Defaults to \code{FALSE}.}

\item{unenriched}{an optional vector of names for filtered unenriched genes. Use it instead of \code{read.unenriched} when the \code{id} is set to \code{NULL}. Defaults to \code{NULL}.}

\item{report}{logical. Should an html report of top-ranking differentially essential genes be generated? Requires an identifier to be set, and both pandoc and plotly installation. Defaults to \code{FALSE}.}
}
\value{
A data frame containing the MoPAC differential gene essentiality scores of the two selected conditions.
}
\description{
Normalizes the distributions of one pair of conditions and generates differential gene essentiality scores.
}
\details{
The distributions of gene scores are first normalized in the following way: (1) If \code{read.unenriched} is \code{FALSE}, then the combination of essential and nonessential genes are quantile-normalized; if it is \code{TRUE}, then the unenriched genes are quantile-normalized, this is recommended if the amount of controls is small. (2) A quantile-quantile plot is fitted to the transformation before and after the normalization. (3) A smoothing spline is fitted to the quantile-quantile plot. (4) The smoothing spline is used to interpolate the transformation of the gene scores which corresponds to the normalization of step 1.

After the gene scores are normalized, a Z score is used to rank the genes according to differential essentiality between the two conditions. A P value is also obtained from the replicate information of each gene.

If \code{id} is not \code{NULL}, the following files are produced in the directory with name equal to the identifier:
\itemize{
 \item{\code{condition1_condition2_normalized_reps.txt}, containing the gene-level normalized scores for the replicates of both conditions.}
 \item{\code{condition1_condition2_differential.txt}, the relative difference statistic for the pair of conditions selected.}
}
}
\examples{

## Example I. Generating output files through an analysis identifier:

## 1. Prepare read counts information:
counts <- read.counts(id="DANG_CCK81", counts=MoPAC::dang_cck81, library=MoPAC::sgRNA_library)

## 2. Manually fill out either of the two annotation files produced by read.counts.
## In this example we will fill it out using R:
annotation <- counts$Annotation
annotation$Condition <- c("Plasmid0","Plasmid1",rep("DANG",4),rep("CCK81",3))
annotation$Replicate <- c("A","A","A","B","C","D","A","B","C")
annotation$Control <- c("","",rep("Plasmid0",4),rep("Plasmid1",3))
utils::write.csv(annotation,"DANG_CCK81/annotation.csv",quote=FALSE,row.names=FALSE)

## 3. Get pre-processed fold changes:
qc <- quality.control(id="DANG_CCK81", report=FALSE)

## 4. Optionally do two-tail RRA essentiality analysis for control gene filtering:
significance <- RRA.2tail(id="DANG_CCK81")

## 5. Gene essentiality analysis:
scores <- analyze.essentiality(id="DANG_CCK81",empirical.weights=TRUE)

## 6. Gene differential essentiality analysis:
## a) If there are only two conditions, there's no need to specify them:
differential <- analyze.differential(id="DANG_CCK81", read.unenriched=TRUE, report=FALSE)

## c) If there are more than two conditions, please select two of them explicitly:
differential <- analyze.differential(id="DANG_CCK81", read.unenriched=TRUE,
                condition1="DANG", condition2="CCK81", report=FALSE)

## Example II. Returning a data frame without using an identifier to generate output:

## 1. Prepare read counts information:
counts <- read.counts(counts=MoPAC::dang_cck81, library=MoPAC::sgRNA_library)

## 2. Prepare sample annotation as a data frame:
annotation <- counts$Annotation
annotation$Condition <- c("Plasmid0","Plasmid1",rep("DANG",4),rep("CCK81",3))
annotation$Replicate <- c("A","A","A","B","C","D","A","B","C")
annotation$Control <- c("","",rep("Plasmid0",4),rep("Plasmid1",3))

## 3. Get pre-processed fold changes:
qc <- quality.control(counts=counts$Counts, annotation=annotation, report=FALSE)

## 4. Optionally do two-tail RRA essentiality analysis for control gene filtering:
significance <- RRA.2tail(sgRNA=qc$sgRNA_lfc)

## 5. Gene essentiality analysis:
scores <- analyze.essentiality(sgRNA_reps=qc$sgRNA_lfc_reps,empirical.weights=TRUE,
                               annotation=annotation)

## 6. Gene differential essentiality analysis:
## a) If there are only two conditions, there's no need to specify them:
differential <- analyze.differential(scored_reps=scores$scored_reps,
   sgRNA=qc$sgRNA_lfc, annotation=annotation,
   unenriched=significance$Unenriched, report=FALSE)

## b) If there are more than two conditions, please select two of them explicitly:
differential <- analyze.differential(scored_reps=scores$scored_reps,
   sgRNA=qc$sgRNA_lfc, annotation=annotation,
   unenriched=significance$Unenriched,
   condition1="DANG", condition2="CCK81", report=FALSE)

##--------------------------------------------------------------------------------------

}
\author{
Oscar D Villarreal, \email{oscardvillarreal@gmail.com}
}
\keyword{differential}
\keyword{essentiality}
